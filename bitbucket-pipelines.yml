image: node:16

definitions:
  steps:
    - step: &build
        name: Build
        clone:
          depth: full  # Ensure we have full repository access
        caches:
          - node
        script:
          - npm ci
          - npm run build
        artifacts:
          - dist/**

    - step: &test
        name: Test
        caches:
          - node
        script:
          - npm ci
          - npm run build
          # Create test policies
          - |
            mkdir -p test/policies
            cat > test/policies/valid.tf << 'EOL'
            resource "oci_identity_policy" "test_policy" {
              statements = [
                "Allow group Administrators to manage all-resources in tenancy",
                "Allow group Developers to use instances in compartment dev",
                "Define tenancy Acceptor as ocid1.tenancy.oc1..aaaaaa",
                "Endorse group NetworkAdmins to manage virtual-network-family in tenancy foo",
                "Admit group ServiceAdmins of tenancy accountFoo to manage instances in tenancy",
                "Allow group SecurityAdmins to manage all-resources in tenancy where request.user.groups contains 'SecurityAdmins'"
              ]
            }
            EOL

            cat > test/policies/invalid.tf << 'EOL'
            resource "oci_identity_policy" "invalid_policy" {
              statements = [
                "AllowBadSyntax manage",
                "Allow groupDevelopers to use instances in compartment dev",
                "Admitgroup ServiceAdmins of tenancy 123 to manage instances in tenancy"
              ]
            }
            EOL

            cat > test/policies/variables.tf << 'EOL'
            resource "oci_identity_policy" "test_policy_vars" {
              statements = [
                "Allow group ${var.admin_group} to manage all-resources in tenancy",
                "Define tenancy ${var.tenant_name} as ${var.tenant_ocid}",
                "Endorse group ${var.network_admins} to manage virtual-network-family in tenancy foo",
                "Admit group ${var.dev_group} of tenancy accountFoo to use instances in compartment ${var.env}",
                "Allow any-user to use instances in compartment ${var.public_compartment} where request.time BETWEEN ${var.start_time} AND ${var.end_time}"
              ]
            }
            EOL
          # Run tests
          - node dist/index.js --path test/policies/valid.tf
          - node dist/index.js --path test/policies/valid_vars.tf

pipelines:
  default:
    - step: *build
    - step: *test
  
  branches:
    main:
      - step: *build
      - step: *test
      - step:
          name: Publish
          deployment: production
          script:
            - npm ci
            - npm version ${BITBUCKET_TAG}
            - npm publish
          condition:
            changesets:
              includePaths:
                - "**"
              includeTags:
                - "^v[0-9]+.[0-9]+.[0-9]+$"

  pull-requests:
    '**':
      - step: *build
      - step: *test

custom:
  release:
    - step: *build
    - step: *test
    - step:
        name: Publish to NPM
        script:
          - pipe: atlassian/npm-publish:0.3.0
            variables:
              NPM_TOKEN: $NPM_TOKEN
caches:
  node: ~/.npm
