name: Test Policy Validation Action
on: [push, pull_request]

jobs:
  test-action:
    runs-on: ubuntu-latest
    name: Test Policy Validation
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build action
        run: npm run build
        
      - name: Create test policies
        run: |
          mkdir -p test/policies
          # Valid policy file
          cat > test/policies/valid.tf << 'EOL'
          resource "oci_identity_policy" "valid_policy" {
            statements = [
              "Allow group Administrators to manage all-resources in tenancy",
              "Allow group Developers to use instances in compartment dev"
            ]
          }
          EOL
          
          # Invalid policy file
          cat > test/policies/invalid.tf << 'EOL'
          resource "oci_identity_policy" "invalid_policy" {
            statements = [
              "Invalid policy statement that should fail",
              "Allow BadSyntax manage"
            ]
          }
          EOL
          
      - name: Test valid policy
        id: test-valid
        continue-on-error: true
        uses: ./
        with:
          path: './test/policies/valid.tf'
          
      - name: Test invalid policy
        id: test-invalid
        continue-on-error: true
        uses: ./
        with:
          path: './test/policies/invalid.tf'
          
      - name: Verify test results
        run: |
          # Valid policy should succeed
          if [ "${{ steps.test-valid.outcome }}" != "success" ]; then
            echo "Valid policy test failed unexpectedly"
            exit 1
          fi
          
          # Invalid policy should fail
          if [ "${{ steps.test-invalid.outcome }}" != "failure" ]; then
            echo "Invalid policy test succeeded unexpectedly"
            exit 1
          fi
          
          # Check output format
          if [ -z "${{ steps.test-valid.outputs.allow_segments }}" ]; then
            echo "No segments found in valid policy"
            exit 1
          fi
